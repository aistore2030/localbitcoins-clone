<?php
 

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Page;
use Auth;
use App\System_Deposit;
use App\Exchange_widthdraw;
use App\System_transactions;
use App\Exchange_g2f ;
class AdminSystemCtrl
{
    private $request;

    public function __construct(Request $request)
    {
          $this->middleware('auth:admin');
        $this->request = $request;
    }
    
   
     public function getg2fall()
    {
      $user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
} 



$exchange_g2f = Exchange_g2f::all();

        return view('backend.system.g2f')
            ->with('exchange_g2f', $exchange_g2f);
    }
    
     public function g2fdelete($username )
    {
      $user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}  
        $deletedRows = Exchange_g2f::where('username', $username)->delete();
        
        
        return redirect('/admin/g2f')->with('status', 'Deleted for the username '.$username);
    }
    
 public function getCoins()
    {
      $user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}  $roles = Role::all();

        return view('backend.system.index')
            ->with('roles', $roles);
    }
    
    
    
 public function alldeposits()
    {
       $user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
} $deposits = System_Deposit::all();

        return view('backend.system.deposits')
            ->with('deposits', $deposits);
    }
    
    
      public function depositsdetails($id)
    {$user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}
        
        $deposit = System_Deposit::where('id', '=',$id)->firstOrFail();
       // return $deposit;
        
        
        
          return view('backend.system.deposit_details')
           ->with('deposit', $deposit);
    }
    
    
    
     public function allwidthdraw()
    {$user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}
        $widthdraw = Exchange_widthdraw::all()->sortByDesc('id');

        return view('backend.system.widthdraw')
            ->with('widthdraw', $widthdraw);
    }
    
       public function widthdrawdetails($id)
    {
        $user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}
        $widthdraw = Exchange_widthdraw::where('id', '=',$id)->firstOrFail();
        
          return view('backend.system.widthdraw_details')
           ->with('widthdraw', $widthdraw);
    }
    
    public function updatewidthdraw($id )
    {
        
        $user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}
         $widthdraw = Exchange_widthdraw::where('id', '=',$id)->firstOrFail();
         
      
 

$widthdraw->status ="Processed";

$widthdraw->description = $this->request->input('description') ;
 
$widthdraw->widthdraw_transaction_id = $this->request->input('widthdrawtransactionid') ;

$widthdraw->save();
 
  
       return view('backend.system.widthdraw_details')
        ->with('widthdraw', $widthdraw);
         
           
           
    }
    
    
    
    public function alltransactions()
    {
        
$user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}

 
        $transactions = System_transactions::all()->sortByDesc('id');

        return view('backend.system.transactions')
            ->with('transactions', $transactions); 
    }
    
    
    
    
      public function transactionsdetails($id)
    {$user_id= Auth::user()->roles ;
           
         
         if ($user_id < 10 ) {
    
 
   return redirect()->back()->with('success', ['Please login with admin password']);   
   exit(1);
}
        
          
        $transaction = System_transactions::where('id', '=',$id)->firstOrFail();
        
          return view('backend.system.transaction_details')
           ->with('transaction', $transaction); 
    }
    
    
    
    
    
    
    
    
}